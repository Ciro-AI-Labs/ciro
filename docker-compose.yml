version: '3.8'

services:
  # PostgreSQL Database
  ***REMOVED***:
    image: ***REMOVED***:15-alpine
    container_name: ciro_***REMOVED***
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ciro_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ciro_password}
      POSTGRES_DB: ${POSTGRES_DB:-ciro_db}
    ports:
      - "5432:5432"
    volumes:
      - ***REMOVED***_data:/var/lib/***REMOVED***ql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ciro_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ciro_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ciro_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  # Backend Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ciro_backend
    depends_on:
      ***REMOVED***:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      NODE_ENV: development
      POSTGRES_USER: ${POSTGRES_USER:-ciro_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ciro_password}
      POSTGRES_DB: ${POSTGRES_DB:-ciro_db}
      POSTGRES_HOST: ***REMOVED***
      POSTGRES_PORT: 5432
      KAFKA_BROKER: kafka:29092
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      HUBSPOT_ACCESS_TOKEN: ${HUBSPOT_ACCESS_TOKEN}
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules

  # Frontend Service
  frontend:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: ciro_frontend
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  ***REMOVED***_data: 