import { Injectable } from '@nestjs/common';
// @ts-nocheck - TODO: This file needs import path fixes

/**
 * Service Registry
 * 
 * This file serves as a central registry of all services.
 * It helps manage dependencies and initialization order.
 */

// Core Services
import { ConfigService } from './config.service';
import { db } from './database.service';

// AI Services
import { OpenAIService, EmbeddingService } from '../ai';

// Vector Services
import { 
  QdrantClientService, 
  QdrantCollectionService, 
  QdrantSearchService,
  QdrantIngestionService
} from '../vector';

// RAG Services
import {
  QueryAnalyzerService,
  RetrievalService,
  GenerationService,
  RagIntegrationService
} from '../rag';

// Data Processing Services
import { DocumentProcessorService } from '../data-processing';

// Utility Services
import { ConversationService, LoggingService } from '../util';

// Service Registry class
@Injectable()
export class ServiceRegistry {
  // Core
  public configService: ConfigService;
  
  // AI
  public openaiService: OpenAIService;
  public embeddingService: EmbeddingService;
  
  // Vector
  public qdrantClientService: QdrantClientService;
  public qdrantCollectionService: QdrantCollectionService;
  public qdrantSearchService: QdrantSearchService;
  public qdrantIngestionService: QdrantIngestionService;
  
  // RAG
  public queryAnalyzerService: QueryAnalyzerService;
  public retrievalService: RetrievalService;
  public generationService: GenerationService;
  public ragIntegrationService: RagIntegrationService;
  
  // Data Processing
  public documentProcessorService: DocumentProcessorService;
  
  // Utility
  public conversationService: ConversationService;
  public loggingService: LoggingService;
  
  
  
  private constructor(
    private readonly configService: ConfigService,
    private readonly openAIService: OpenAIService,
    private readonly embeddingService: EmbeddingService,
    private readonly qdrantClientService: QdrantClientService,
    private readonly qdrantCollectionService: QdrantCollectionService,
    private readonly qdrantSearchService: QdrantSearchService,
    private readonly qdrantIngestionService: QdrantIngestionService,
    private readonly queryAnalyzerService: QueryAnalyzerService,
    private readonly retrievalService: RetrievalService,
    private readonly generationService: GenerationService,
    private readonly ragIntegrationService: RagIntegrationService,
    private readonly documentProcessorService: DocumentProcessorService,
    private readonly conversationService: ConversationService,
    private readonly loggingService: LoggingService,
    ) {
    // Initialize core services first
    this.configService = this.configService;
    
    // Initialize AI services
    this.openaiService = this.openAIService;
    this.embeddingService = this.embeddingService;
    
    // Initialize vector services
    this.qdrantClientService = this.qdrantClientService;
    this.qdrantCollectionService = this.qdrantCollectionService;
    this.qdrantSearchService = this.qdrantSearchService;
    this.qdrantIngestionService = this.qdrantIngestionService;
    
    // Initialize RAG services
    this.queryAnalyzerService = this.queryAnalyzerService;
    this.retrievalService = this.retrievalService;
    this.generationService = this.generationService;
    this.ragIntegrationService = this.ragIntegrationService;
    
    // Initialize data processing services
    this.documentProcessorService = this.documentProcessorService;
    
    // Initialize utility services
    this.conversationService = this.conversationService;
    this.loggingService = this.loggingService;
  }
  
  
} 